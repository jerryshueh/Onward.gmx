<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ha=0;
va=0;

hs=0;
vs=0;

hor=0;
vert=0;

width=sprite_width-1;
height=sprite_height-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Input
horizontal=-keyboard_check(ord("A"))+keyboard_check(ord("D"));
vertical=-keyboard_check(ord("W"))+keyboard_check(ord("S"));

//Figure out direction you want to go in based on input
dir=point_direction(0,0,horizontal,vertical);

//Add acceleration
hs+=lengthdir_x(abs(horizontal),dir);
vs+=lengthdir_y(abs(vertical),dir);

//Direction you're actually traveling in
fDir=point_direction(0,0,hs,vs);

//Add friction
hs-=( cos(degtorad(fDir))*min(0.5, abs(hs)) );
vs+=( sin(degtorad(fDir))*min(0.5, abs(vs)) );

//Limit internal speed
hsMax=abs(lengthdir_x(4,fDir));
vsMax=abs(lengthdir_y(4,fDir));
if abs(hs)&gt;hsMax
{
    hs=hsMax*sign(hs);
}
if abs(vs)&gt;vsMax
{
    vs=vsMax*sign(vs);
}

//----------------------------------APPLY MOTION---------------------------------//

//Vertical motion
vert+=vs;
var v=round(vert);
vert-=v;
repeat(abs(v))
{   
    if !place_meeting(x,y+sign(vs),objBlockParent)
    { 
        y+=sign(vs); 
    }
    //Check the corners for collision
    else if (place_meeting(x, y + sign(vs), objBlockParent) &amp;&amp; !place_meeting(x - 1, y + sign(vs), objBlockParent)) {
        --x;
    }
    else if (place_meeting(x, y + sign(vs), objBlockParent) &amp;&amp; !place_meeting(x + 1, y + sign(vs), objBlockParent)) {
        ++x;
    }
    else 
    {
        vs=0;
    }
}

//Horizontal motion
hor+=hs;
var h=round(hor);
hor-=h;
repeat(abs(h))
{
    //slope=0;
    if !place_meeting(x+sign(hs),y,objBlockParent)
    { 
        x+=sign(hs); 
    }
    //Check the corners for collision
    else if (place_meeting(x + sign(hs), y, objBlockParent) &amp;&amp; !place_meeting(x + sign(hs), y - 1, objBlockParent)) {
        --y;
    }
    else if (place_meeting(x + sign(hs), y, objBlockParent) &amp;&amp; !place_meeting(x + sign(hs), y + 1, objBlockParent)) {
        ++y;
    }
    else
    {
        hs=0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_font(font0);
draw_text(5,460,"Created by @AmongTheWoods");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
